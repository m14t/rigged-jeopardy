{"version":3,"sources":["data/question-data.ts","components/game-board/validate-questions.ts","components/question.tsx","components/game-board/index.tsx","components/players.tsx","components/app/index.tsx","serviceWorker.ts","index.tsx"],"names":["questionData","category","questions","easy","image","concat","process","answer","hard","text","video","validateQuestions","map","path","every","el","i","arr","Error","useEffect","React","styles","question","alignItems","backgroundColor","color","display","fontSize","height","justifyContent","width","selected","position","top","left","right","bottom","backgroundPosition","backgroundRepeat","backgroundSize","flex","alignContent","padding","textAlign","Question","props","_useState","useState","_useState2","Object","slicedToArray","setSelected","_useState3","Math","floor","value","_useState4","setValue","onClick","useCallback","event","disabled","shiftKey","react_default","a","createElement","Fragment","style","objectSpread","backgroundImage","controls","src","type","dangerouslySetInnerHTML","__html","losingKeys","targetKeys","downHandler","_ref","key","includes","Audio","play","onClose","window","addEventListener","removeEventListener","pointValues","table","th","border","GameBoard","categories","pluck","questionLength","length","react","range","row","view","lensPath","column","components_question","onQuestionClose","players","fontWeight","margin","player","flexDirection","flexGrow","Players","toString","selectPlayer","parseInt","name","score","initialState","reducer","state","action","index","findIndex","propEq","over","add","points","pipe","assoc","set","app","App","_useReducer","useReducer","_useReducer2","dispatch","updatePoints","game_board","some","components_players","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8MA4LeA,EA1LoB,CACjC,CACEC,SAAU,qBACVC,UAAW,CAET,CACEC,KAAM,CACJC,MAAK,GAAAC,OAAKC,mBAAL,qBACLC,OAAQ,QAEVC,KAAM,CACJJ,MAAK,GAAAC,OAAKC,mBAAL,qBACLC,OAAQ,SAIZ,CACEJ,KAAM,CACJM,KACE,kGACFL,MAAK,GAAAC,OAAKC,mBAAL,oCACLC,OAAQ,iBAEVC,KAAM,CACJC,KAAM,4DACNL,MAAK,GAAAC,OAAKC,mBAAL,oCACLC,OAAQ,iBAIZ,CACEJ,KAAM,CACJM,KAAM,gDACNL,MAAK,GAAAC,OAAKC,mBAAL,oCACLC,OAAQ,QAEVC,KAAM,CACJE,MAAK,GAAAL,OAAKC,mBAAL,oBACLC,OAAQ,UAKhB,CACEN,SAAU,qBACVC,UAAW,CAET,CACEC,KAAM,CACJM,KACE,qEACFL,MAAK,GAAAC,OAAKC,mBAAL,qCACLC,OAAQ,QAEVC,KAAM,CACJC,KACE,uFACFL,MAAK,GAAAC,OAAKC,mBAAL,oCACLC,OAAQ,SAIZ,CACEJ,KAAM,CACJC,MAAK,GAAAC,OAAKC,mBAAL,mCACLC,OAAQ,OAEVC,KAAM,CACJJ,MAAK,GAAAC,OAAKC,mBAAL,mCACLC,OAAQ,QAIZ,CACEJ,KAAM,CACJM,KAAM,2DACNL,MAAK,GAAAC,OACHC,mBADG,0CAGLC,OAAQ,QAEVC,KAAM,CACJC,KAAM,6DACNL,MAAK,GAAAC,OACHC,mBADG,8CAGLC,OAAQ,WAKhB,CACEN,SAAU,wBACVC,UAAW,CAET,CACEC,KAAM,CACJM,KAAM,+BACNL,MAAK,GAAAC,OAAKC,mBAAL,mCACLC,OAAQ,2CAEVC,KAAM,CACJC,KAAM,2DACNL,MAAK,GAAAC,OAAKC,mBAAL,kCACLC,OAAQ,6BAIZ,CACEJ,KAAM,CACJM,KACE,8JACFL,MAAK,GAAAC,OAAKC,mBAAL,6BACLC,OAAQ,QAEVC,KAAM,CACJC,KACE,4FACFL,MAAK,GAAAC,OAAKC,mBAAL,6BACLC,OAAQ,eAIZ,CACEJ,KAAM,CACJM,KAAM,kCACNL,MAAK,GAAAC,OAAKC,mBAAL,mCACLC,OAAQ,QAEVC,KAAM,CACJC,KACE,wEACFL,MAAK,GAAAC,OACHC,mBADG,0CAGLC,OAAQ,WAKhB,CACEN,SAAU,sBACVC,UAAW,CAET,CACEC,KAAM,CACJM,KACE,2FACFF,OAAQ,aAEVC,KAAM,CACJC,KACE,4GACFF,OAAQ,+CAIZ,CACEJ,KAAM,CACJO,MAAK,GAAAL,OAAKC,mBAAL,oBACLC,OAAQ,OAEVC,KAAM,CACJC,KAAI,kLACJL,MAAK,GAAAC,OAAKC,mBAAL,uCACLC,OAAQ,kBAIZ,CACEJ,KAAM,CACJM,KACE,0HACFL,MAAK,GAAAC,OAAKC,mBAAL,oCACLC,OAAQ,QAEVC,KAAM,CAEJE,MAAK,GAAAL,OAAKC,mBAAL,2BACLC,OAAQ,mBCvKHI,MAXf,SAA2BX,GAMzB,IALwBA,EAAaY,IAAIC,YAAK,CAAC,YAAa,YACZC,MAC9C,SAACC,EAAIC,EAAGC,GAAR,OAAgBF,IAAOE,EAAI,KAI3B,MAAM,IAAIC,MAAM,uFCNZC,EAAcC,IAAdD,UAEFE,EAAS,CACbC,SAAU,CACRC,WAAY,SACZC,gBAAiB,UACjBC,MAAO,UACPC,QAAS,OACTC,SAAU,QACVC,OAAQ,OACRC,eAAgB,SAChBC,MAAO,QAETC,SAAU,CACRC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVhC,MAAO,CACLiC,mBAAoB,SACpBC,iBAAkB,YAClBC,eAAgB,UAChBC,KAAM,EACNZ,OAAQ,QAEVnB,KAAM,CACJgC,aAAc,SACdD,KAAM,EACNE,QAAS,SACTC,UAAW,UAEbjC,MAAO,CACLkB,OAAQ,SAgGGgB,MArFf,SAAkBC,GAAc,IAAAC,EACEC,oBAAS,GADXC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBf,EADuBiB,EAAA,GACbG,EADaH,EAAA,GAAAI,EAEJL,mBAAQ,GAAA1C,OAAIgD,KAAKC,MAAMT,EAAMU,SAFzBC,EAAAP,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEvBG,EAFuBC,EAAA,GAEhBC,EAFgBD,EAAA,GAIxBE,EAAUC,sBACd,SAACC,GACC,IAAIf,EAAMgB,UAAsB,KAAVN,EAAtB,CAGAJ,GAAY,GAEZ,IAAM7B,EAAWsC,EAAME,SACnBjB,EAAMvB,SAASd,KACfqC,EAAMvB,SAASnB,KAEnBsD,EACEM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG5C,EAASlB,OACR2D,EAAAC,EAAAC,cAAA,OACEE,MAAKlB,OAAAmB,EAAA,EAAAnB,CAAA,GACA5B,EAAOjB,MADP,CAEHiE,gBAAe,OAAAhE,OAASiB,EAASlB,MAAlB,SAIpBkB,EAASZ,OACRqD,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACH,MAAO9C,EAAOX,OAC5BqD,EAAAC,EAAAC,cAAA,UAAQM,IAAKjD,EAASZ,MAAO8D,KAAK,eAGrClD,EAASb,MACRsD,EAAAC,EAAAC,cAAA,OACEQ,wBAAyB,CACvBC,OAAQpD,EAASb,MAEnB0D,MAAO9C,EAAOZ,WAMxB,CAACoC,EAAMgB,SAAU9B,EAAUwB,IAGvBoB,EAAa,CAAC,IAAK,KAEnBC,EAAU,GAAAvE,OAAOsE,EADH,CAAC,IAAK,MAE1B,SAASE,EAATC,GAA6C,IAAtBC,EAAsBD,EAAtBC,IACjBhD,GAAY6C,EAAWI,SAASD,KAClC5B,GAAY,GACZM,EAAS,IAELkB,EAAWK,SAASD,IACtB,IAAIE,MAAJ,GAAA5E,OACKC,mBADL,mCAEE4E,OAEFrC,EAAMsC,SAAS,EAAItC,EAAMU,SAEzB,IAAI0B,MAAJ,GAAA5E,OAAaC,mBAAb,qBAAuD4E,OAEvDrC,EAAMsC,QAAQtC,EAAMU,SAY1B,OAPApC,EAAU,WAER,OADAiE,OAAOC,iBAAiB,UAAWR,GAC5B,WACLO,OAAOE,oBAAoB,UAAWT,KAEvC,CAAChC,EAAMsC,QAASpD,IAGjBgC,EAAAC,EAAAC,cAAA,OACEP,QAASA,EACTS,MACEpC,EAAQkB,OAAAmB,EAAA,EAAAnB,CAAA,GAAQ5B,EAAOC,SAAaD,EAAOU,UAAaV,EAAOC,UAGhEiC,IC1HDgC,EAAc,CAAC,GAAI,GAAI,IACvBlE,EAAS,CACbmE,MAAO,CACLxD,SAAU,WACVP,MAAO,UACPG,OAAQ,OACRE,MAAO,QAET2D,GAAI,CACFC,OAAQ,oBACR/D,SAAU,OACVC,OAAQ,OACRc,QAAS,OACTC,UAAW,WAgDAgD,MAvCf,SAAmB9C,GACjBlC,EAAkBX,GAElB,IAAM4F,EAAaC,YAAM,WAAY7F,GAC/B8F,EAAiB9F,EAAa,GAAGE,UAAU6F,OAEjD,OACEC,EAAA,uBAAO7B,MAAO9C,EAAOmE,OACnBQ,EAAA,2BACEA,EAAA,wBACGJ,EAAWhF,IAAI,SAACX,GAAD,OACd+F,EAAA,oBAAIjB,IAAK9E,EAAUkE,MAAO9C,EAAOoE,IAC9BxF,OAKT+F,EAAA,2BACGC,YAAM,EAAGH,GAAgBlF,IAAI,SAACsF,GAAD,OAC5BF,EAAA,oBAAIjB,IAAKmB,GACNlG,EACEY,IAAIuF,YAAKC,YAAS,CAAC,YAAaF,MAChCtF,IAAI,SAACU,EAAU+E,GAAX,OACHL,EAAA,oBAAIjB,IAAG,IAAA1E,OAAM6F,EAAN,KAAA7F,OAAagG,IAClBL,EAAA,cAACM,EAAD,CACEzC,SAAUhB,EAAMgB,SAChBsB,QAAStC,EAAM0D,gBACfjF,SAAUA,EACViC,MAAOgC,EAAYW,sBCtD/B/E,EAAcC,YAOhBC,EAAS,CACbmF,QAAS,CACP/E,MAAO,UACPC,QAAS,OACTC,SAAU,OACV8E,WAAY,OACZ7E,OAAQ,OACRC,eAAgB,gBAChB6E,OAAQ,UAEVC,OAAQ,CACNnF,gBAAiB,UACjBkE,OAAQ,oBACRhE,QAAS,OACTkF,cAAe,SACfC,SAAU,EACVhF,eAAgB,eAChB6E,OAAQ,OACRhE,QAAS,MACTC,UAAW,UAEbZ,SAAU,CACR2D,OAAQ,sBAuCGoB,MAnCf,SAAiBjE,GACf,IAAM+B,EAAaqB,YAAM,EAAGpD,EAAM2D,QAAQT,OAAS,GAAGnF,IAAImG,KAC1D,SAASlC,EAATC,GAA6C,IAAtBC,EAAsBD,EAAtBC,IACjBH,EAAWI,SAASD,IACtBlC,EAAMmE,aAAanE,EAAM2D,QAAQS,SAASlC,EAAK,IAAM,IAWzD,OAPA5D,EAAU,WAER,OADAiE,OAAOC,iBAAiB,UAAWR,GAC5B,WACLO,OAAOE,oBAAoB,UAAWT,KAEvC,IAGDmB,EAAA,qBAAK7B,MAAO9C,EAAOmF,SAChB3D,EAAM2D,QAAQ5F,IAAI,SAAC+F,EAAQ3F,GAAT,OACjBgF,EAAA,qBACEjB,IAAK/D,EACL0C,QAAS,kBAAMb,EAAMmE,aAAaL,IAClCxC,MACEwC,EAAO5E,SAAPkB,OAAAmB,EAAA,EAAAnB,CAAA,GACS5B,EAAOsF,OAAWtF,EAAOU,UAC9BV,EAAOsF,QAGbX,EAAA,0BAAOW,EAAOO,MACdlB,EAAA,0BAAOW,EAAOQ,4EChDlBC,EAAe,CACnB,CACEF,KAAM,WACNC,MAAO,EACPpF,UAAU,GAEZ,CACEmF,KAAM,WACNC,MAAO,EACPpF,UAAU,GAEZ,CACEmF,KAAM,WACNC,MAAO,EACPpF,UAAU,IAIRsF,EAAU,SAACC,EAAYC,GAC3B,OAAQA,EAAO/C,MACb,IAAK,cACH,IAAMgD,EAAQC,YAAUC,YAAO,YAAY,GAAOJ,GAElD,OAAOK,YAAKvB,YAAS,CAACoB,EAAO,UAAWI,YAAIL,EAAOM,QAA5CF,CAAqDL,GAE9D,IAAK,eACH,IAAME,EAAQC,YAAUC,YAAO,OAAQH,EAAOZ,OAAOO,MAAOI,GAC5D,OAAOQ,YACLlH,YAAImH,YAAM,YAAY,IACtBC,YAAI5B,YAAS,CAACoB,EAAO,cAAc,GAF9BM,CAGLR,GAEJ,QACE,OAAOA,IAIPjG,EAAS,CACb4G,IAAK,CACHzG,gBAAiB,YAqCN0G,MAjCf,WAAe,IAAAC,EACeC,qBAAWf,EAASD,GADnCiB,EAAApF,OAAAC,EAAA,EAAAD,CAAAkF,EAAA,GACN3B,EADM6B,EAAA,GACGC,EADHD,EAAA,GAGPrB,EAAerD,sBACnB,SAACgD,GACC2B,EAAS,CACP9D,KAAM,eACNmC,YAGJ,CAAC2B,EAAU9B,IAEP+B,EAAe5E,sBACnB,SAACkE,GACCS,EAAS,CACP9D,KAAM,cACNqD,YAGJ,CAACS,IAGH,OACEtC,EAAA,qBAAK7B,MAAO9C,EAAO4G,KACjBjC,EAAA,cAACwC,EAAD,CACE3E,UAAW2C,EAAQiC,KAAKf,YAAO,YAAY,IAC3CnB,gBAAiBgC,IAEnBvC,EAAA,cAAC0C,EAAD,CAASlC,QAASA,EAASQ,aAAcA,MC3E3B2B,QACW,cAA7BvD,OAAOwD,SAASC,UAEe,UAA7BzD,OAAOwD,SAASC,UAEhBzD,OAAOwD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjF,EAAAC,EAAAC,cAACgE,EAAD,MAASgB,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.62d00930.chunk.js","sourcesContent":["import { QuestionData } from '../types';\n\nconst questionData: QuestionData = [\n  {\n    category: 'The Year in Photos',\n    questions: [\n      // Question 1\n      {\n        easy: {\n          image: `${process.env.PUBLIC_URL}/images/today.jpg`,\n          answer: '????',\n        },\n        hard: {\n          image: `${process.env.PUBLIC_URL}/images/today.jpg`,\n          answer: '????',\n        },\n      },\n      // Question 2\n      {\n        easy: {\n          text:\n            \"This year's ball pit had 2011 balls and 2011 tree roots forever wrecked Wolf's plumbing system.\",\n          image: `${process.env.PUBLIC_URL}/images/Year_Photos_750_easy.jpg`,\n          answer: 'What is 2011?',\n        },\n        hard: {\n          text: \"The number of balls that were in Gosselin 2011's ball pit\",\n          image: `${process.env.PUBLIC_URL}/images/Year_Photos_750_easy.jpg`,\n          answer: 'What is 476?',\n        },\n      },\n      // Question 3\n      {\n        easy: {\n          text: 'Eliz was trapped in a silent movie this year.',\n          image: `${process.env.PUBLIC_URL}/images/Year_Photos_250_easy.png`,\n          answer: '2013',\n        },\n        hard: {\n          video: `${process.env.PUBLIC_URL}/videos/hard.mp4`,\n          answer: '???',\n        },\n      },\n    ],\n  },\n  {\n    category: 'Twomb-atic Moments',\n    questions: [\n      // Question 1\n      {\n        easy: {\n          text:\n            \"The midnight ride of Twombs Revere comes from Gosselin's 2nd year.\",\n          image: `${process.env.PUBLIC_URL}/images/twomb-mautic_750_2005.jpg`,\n          answer: '2005',\n        },\n        hard: {\n          text:\n            'Make sure you can name what year this was from, or the sheriff will be on your tail!',\n          image: `${process.env.PUBLIC_URL}/images/twmob-matic_250_hard.jpg`,\n          answer: '2007',\n        },\n      },\n      // Question 2\n      {\n        easy: {\n          image: `${process.env.PUBLIC_URL}images/Erock_Paper_Scissors.png`,\n          answer: '???',\n        },\n        hard: {\n          image: `${process.env.PUBLIC_URL}images/Erock_Paper_Scissors.png`,\n          answer: '???',\n        },\n      },\n      // Question 3\n      {\n        easy: {\n          text: \"You'd have to be insane to not remember this 2013 posse!\",\n          image: `${\n            process.env.PUBLIC_URL\n          }/images/twomb-matic_1000_easy_2013.jpg`,\n          answer: '2013',\n        },\n        hard: {\n          text: 'The first trapeze act was premiered in this year in Paris.',\n          image: `${\n            process.env.PUBLIC_URL\n          }/images/Twomb-matic_1000_hard_fem_2016.jpg`,\n          answer: '1859',\n        },\n      },\n    ],\n  },\n  {\n    category: 'Food Through The Ages',\n    questions: [\n      // Question 1\n      {\n        easy: {\n          text: \"The year of Noah Wolf's BBQ.\",\n          image: `${process.env.PUBLIC_URL}/images/food_easy_wolf_2009.gif`,\n          answer: '2004, 2005, 2007-2012, 2015, 2016, 2018',\n        },\n        hard: {\n          text: \"Name the 6th ingredient from 2007's Jello brand Pudding.\",\n          image: `${process.env.PUBLIC_URL}/images/food_500_easy_2007.jpg`,\n          answer: 'Tetrasodium Pyrohosphate',\n        },\n      },\n      // Question 2\n      {\n        easy: {\n          text:\n            'Garnished with these sight-enhancing vegetables, King Erock should have 20/20 vision. But sadly, this Gosselin took place 8 years prior to his 2020 dreams.',\n          image: `${process.env.PUBLIC_URL}/images/food_750_2012.jpg`,\n          answer: '2012',\n        },\n        hard: {\n          text:\n            'The quantity of juice that this 2012 vegetable king could make with his herbaceous crown.',\n          image: `${process.env.PUBLIC_URL}/images/food_750_2012.jpg`,\n          answer: '15 fl. oz.',\n        },\n      },\n      // Question 3\n      {\n        easy: {\n          text: 'Y2K + 5 = Martini stew, no doi.',\n          image: `${process.env.PUBLIC_URL}/images/food_1000_easy_2005.jpg`,\n          answer: '2005',\n        },\n        hard: {\n          text:\n            'The year the last of the pudding was finally scraped off these walls.',\n          image: `${\n            process.env.PUBLIC_URL\n          }/images/Year_Photos_1000_hard_2015.jpg`,\n          answer: '2015',\n        },\n      },\n    ],\n  },\n  {\n    category: 'Celebrity Sightings',\n    questions: [\n      // Question 1\n      {\n        easy: {\n          text:\n            'Hey Daddy-o,<br />This is the Goss you know,<br />Ramones were the only band listened to',\n          answer: '2004-2019',\n        },\n        hard: {\n          text:\n            'Doo doo doo do.<br />Doo doo doo do.<br />Doo doo doo do.<br />Doo doo doo do.<br />Do you have the time?',\n          answer: 'What is the 90s Medley from Gosselin 2008?',\n        },\n      },\n      // Question 2\n      {\n        easy: {\n          video: `${process.env.PUBLIC_URL}/videos/easy.mp4`,\n          answer: '???',\n        },\n        hard: {\n          text: `In 2009, \"Dave, dressed as Ellen Degeneres, coudln't get Ellen out of his mind.\"  In THIS year, Ellen Degeneres finally got cigarettes out of her mind, when she quit smoking.`,\n          image: `${process.env.PUBLIC_URL}/images/Celebrity_easy_500_2009.png`,\n          answer: '2005, no doi.',\n        },\n      },\n      // Question 3\n      {\n        easy: {\n          text:\n            \"This was the year Martini had a John Wilkes Booth to commemorate the 150th anniversary of Lincoln's 1865 assassination.\",\n          image: `${process.env.PUBLIC_URL}/images/celebrity_1000__2015.jpg`,\n          answer: '2015',\n        },\n        hard: {\n          // text: '???',\n          video: `${process.env.PUBLIC_URL}/videos/austin_hard.mp4`,\n          answer: '???',\n        },\n      },\n    ],\n  },\n];\n\nexport default questionData;\n","import { path } from 'ramda';\nimport { QuestionData } from '../../types';\n\nfunction validateQuestions(questionData: QuestionData) {\n  const categoryLenghts = questionData.map(path(['questions', 'length']));\n  const allCategoriesSameLength = categoryLenghts.every(\n    (el, i, arr) => el === arr[0],\n  );\n\n  if (!allCategoriesSameLength) {\n    throw new Error('All categories do not have the same length');\n  }\n}\n\nexport default validateQuestions;\n","// @ts-ignore --  has no exported member 'dangerouslySetInnerHTML'.  TS2305\nimport React, { dangerouslySetInnerHTML } from 'react';\nimport { QuestionContainer } from '../types';\nimport { useState, useCallback } from 'react';\nconst { useEffect } = React;\n\nconst styles = {\n  question: {\n    alignItems: 'center',\n    backgroundColor: '#0000ff',\n    color: '#ffffff',\n    display: 'flex',\n    fontSize: '7.5vh',\n    height: '100%',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  selected: {\n    position: 'absolute' as 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  image: {\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    flex: 1,\n    height: '100%',\n  },\n  text: {\n    alignContent: 'center',\n    flex: 1,\n    padding: '0 20px',\n    textAlign: 'center' as 'center',\n  },\n  video: {\n    height: '100%',\n  },\n};\n\ntype Props = {\n  disabled: boolean;\n  onClose: (points: number) => void;\n  question: QuestionContainer;\n  value: number;\n};\n\nfunction Question(props: Props) {\n  const [selected, setSelected] = useState(false);\n  const [value, setValue] = useState(`${Math.floor(props.value)}` as any);\n\n  const onClick = useCallback(\n    (event) => {\n      if (props.disabled || value === '') {\n        return;\n      }\n      setSelected(true);\n\n      const question = event.shiftKey\n        ? props.question.hard\n        : props.question.easy;\n\n      setValue(\n        <>\n          {question.image && (\n            <div\n              style={{\n                ...styles.image,\n                backgroundImage: `url(${question.image})`,\n              }}\n            />\n          )}\n          {question.video && (\n            <video controls style={styles.video}>\n              <source src={question.video} type=\"video/mp4\" />\n            </video>\n          )}\n          {question.text && (\n            <div\n              dangerouslySetInnerHTML={{\n                __html: question.text,\n              }}\n              style={styles.text}\n            />\n          )}\n        </>,\n      );\n    },\n    [props.disabled, selected, value],\n  );\n\n  const losingKeys = ['-', '_'];\n  const winningKeys = ['=', '+'];\n  const targetKeys = [...losingKeys, ...winningKeys];\n  function downHandler({ key }: KeyboardEvent) {\n    if (selected && targetKeys.includes(key)) {\n      setSelected(false);\n      setValue('');\n\n      if (losingKeys.includes(key)) {\n        new Audio(\n          `${process.env.PUBLIC_URL}/mp3s/dont-impress-me-much.mp3`,\n        ).play();\n\n        props.onClose(-1 * props.value);\n      } else {\n        new Audio(`${process.env.PUBLIC_URL}/mp3s/whoomp.mp3`).play();\n\n        props.onClose(props.value);\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  }, [props.onClose, selected]);\n\n  return (\n    <div\n      onClick={onClick}\n      style={\n        selected ? { ...styles.question, ...styles.selected } : styles.question\n      }\n    >\n      {value}\n    </div>\n  );\n}\n\nexport default Question;\n","import * as React from 'react';\nimport { questionData } from '../../data';\nimport validateQuestions from './validate-questions';\nimport { lensPath, pluck, range, view } from 'ramda';\nimport Question from '../question';\nimport { QuestionContainer } from '../../types';\n\nconst pointValues = [17, 42, 69];\nconst styles = {\n  table: {\n    position: 'relative' as 'relative',\n    color: '#ffffff',\n    height: '80vh',\n    width: '100%',\n  },\n  th: {\n    border: '2px solid #ffffff',\n    fontSize: '34px',\n    height: '15vh',\n    padding: '10px',\n    textAlign: 'center' as 'center',\n  },\n};\n\ntype Props = {\n  disabled: boolean;\n  onQuestionClose: (points: number) => void;\n};\n\nfunction GameBoard(props: Props) {\n  validateQuestions(questionData);\n\n  const categories = pluck('category', questionData);\n  const questionLength = questionData[0].questions.length;\n\n  return (\n    <table style={styles.table}>\n      <thead>\n        <tr>\n          {categories.map((category) => (\n            <th key={category} style={styles.th}>\n              {category}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {range(0, questionLength).map((row) => (\n          <tr key={row}>\n            {questionData\n              .map(view(lensPath(['questions', row])))\n              .map((question, column) => (\n                <td key={`r${row}c${column}`}>\n                  <Question\n                    disabled={props.disabled}\n                    onClose={props.onQuestionClose}\n                    question={question as QuestionContainer}\n                    value={pointValues[row]}\n                  />\n                </td>\n              ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default GameBoard;\n","import * as React from 'react';\nimport { range, toString } from 'ramda';\nimport { Player } from '../types';\nconst { useEffect } = React;\n\ntype Props = {\n  players: Player[];\n  selectPlayer: (player: Player) => void;\n};\n\nconst styles = {\n  players: {\n    color: '#ffffff',\n    display: 'flex',\n    fontSize: '25px',\n    fontWeight: 'bold' as 'bold',\n    height: '15vh',\n    justifyContent: 'space-between',\n    margin: '0 10px',\n  },\n  player: {\n    backgroundColor: '#0000ff',\n    border: '5px solid #0000ff',\n    display: 'flex',\n    flexDirection: 'column' as 'column',\n    flexGrow: 1,\n    justifyContent: 'space-around',\n    margin: '10px',\n    padding: '5px',\n    textAlign: 'center' as 'center',\n  },\n  selected: {\n    border: '5px solid #f4e542',\n  },\n};\n\nfunction Players(props: Props) {\n  const targetKeys = range(1, props.players.length + 1).map(toString);\n  function downHandler({ key }: KeyboardEvent) {\n    if (targetKeys.includes(key)) {\n      props.selectPlayer(props.players[parseInt(key, 10) - 1]);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    };\n  }, []);\n\n  return (\n    <div style={styles.players}>\n      {props.players.map((player, i) => (\n        <div\n          key={i}\n          onClick={() => props.selectPlayer(player)}\n          style={\n            player.selected\n              ? { ...styles.player, ...styles.selected }\n              : styles.player\n          }\n        >\n          <span>{player.name}</span>\n          <span>{player.score}</span>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Players;\n","import * as React from 'react';\nimport GameBoard from '../game-board';\nimport Players from '../players';\nimport { useCallback, useReducer } from 'react';\nimport {\n  add,\n  assoc,\n  findIndex,\n  lensPath,\n  map,\n  over,\n  pipe,\n  propEq,\n  set,\n} from 'ramda';\n\nconst initialState = [\n  {\n    name: 'Player 1',\n    score: 0,\n    selected: false,\n  },\n  {\n    name: 'Player 2',\n    score: 0,\n    selected: false,\n  },\n  {\n    name: 'Player 3',\n    score: 0,\n    selected: false,\n  },\n];\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'updateScore': {\n      const index = findIndex(propEq('selected', true), state);\n\n      return over(lensPath([index, 'score']), add(action.points))(state);\n    }\n    case 'selectPlayer': {\n      const index = findIndex(propEq('name', action.player.name), state);\n      return pipe(\n        map(assoc('selected', false)),\n        set(lensPath([index, 'selected']), true),\n      )(state);\n    }\n    default:\n      return state;\n  }\n};\n\nconst styles = {\n  app: {\n    backgroundColor: '#000000',\n  },\n};\n\nfunction App() {\n  const [players, dispatch] = useReducer(reducer, initialState);\n\n  const selectPlayer = useCallback(\n    (player) => {\n      dispatch({\n        type: 'selectPlayer',\n        player,\n      });\n    },\n    [dispatch, players],\n  );\n  const updatePoints = useCallback(\n    (points) => {\n      dispatch({\n        type: 'updateScore',\n        points,\n      });\n    },\n    [dispatch],\n  );\n\n  return (\n    <div style={styles.app}>\n      <GameBoard\n        disabled={!players.some(propEq('selected', true))}\n        onQuestionClose={updatePoints}\n      />\n      <Players players={players} selectPlayer={selectPlayer} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}